{"version":3,"file":"static/webpack/static\\development\\pages\\hooks.js.9dc16e5c3622639a9e08.hot-update.js","sources":["webpack:///./pages/hooksAsFunction.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport ObjectsinHooks from \"../containers/objectsinHooks\"\r\nimport ArraysinHooks from \"../containers/arraysinhooks\";\r\n\r\n\r\nfunction hooksAsFunction() {\r\n\r\n    const initialVal = 0;\r\n    const [counterValue, incrementCounter] = useState(initialVal)\r\n\r\n\r\n    //behaves as componentDidMount , DidUpdate & WillUnmount for functional components\r\n    useEffect(() => {\r\n        document.title = \"Title - \" + counterValue\r\n    })\r\n\r\n    const incrementBy5 = () => {\r\n\r\n        for (var i = 0; i < 5; i++) {\r\n            incrementCounter(prevVal => prevVal + 1)\r\n        }\r\n\r\n        //this is not called when everytime the component is rendered\r\n        document.title = \"Title - \" + counterValue\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div> Only here since this is a functional component - we can use hooks </div>>\r\n\r\n            <button onClick={() => incrementCounter(prevVal => prevVal + 1)}>Counter +</button>\r\n            <button onClick={() => incrementCounter(prevVal => prevVal - 1)}>Counter -</button>\r\n            <button onClick={() => incrementCounter(initialVal)}>Counter 0</button>\r\n\r\n            <button onClick={incrementBy5}>Counter +5</button>\r\n\r\n            <button onClick={() => incrementCounter(counterValue + 1)}>Use Effect Demo</button>\r\n\r\n            <h4> {counterValue} </h4>\r\n\r\n            <hr />\r\n            <ObjectsinHooks />\r\n            <hr />\r\n            <ArraysinHooks />\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default hooksAsFunction;"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAHA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}