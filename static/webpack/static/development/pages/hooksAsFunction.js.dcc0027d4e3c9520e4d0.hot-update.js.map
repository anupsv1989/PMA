{"version":3,"file":"static/webpack/static\\development\\pages\\hooksAsFunction.js.dcc0027d4e3c9520e4d0.hot-update.js","sources":["webpack:///./pages/hooksAsFunction.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { render } from \"react-dom\";\r\n\r\n\r\n\r\nfunction hooksAsFunction() {\r\n\r\n    const initialVal = 0;\r\n    const [counterValue, incrementCounter] = useState(initialVal)\r\n\r\n    const incrementBy5 = () => {\r\n        for (var i = 0; i < 5; i++) {\r\n            incrementCounter(prevVal => prevVal + 1)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div> Only here since this is a functional component - we can use hooks </div>>\r\n\r\n            <button onClick={() => incrementCounter(counterValue + 1)}>Counter +</button>\r\n            <button onClick={() => incrementCounter(counterValue - 1)}>Counter -</button>\r\n            <button onClick={() => incrementCounter(initialVal)}>Counter 0</button>\r\n\r\n            <button onClick={incrementBy5}>Counter +5</button>\r\n\r\n            <h4> {counterValue} </h4>\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default hooksAsFunction;"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AAEA;AACA;AAHA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}