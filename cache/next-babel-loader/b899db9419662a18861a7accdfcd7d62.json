{"ast":null,"code":"var _jsxFileName = \"D:\\\\RandDChamber\\\\LogwardPlugin\\\\ProjectManagement\\\\PMA\\\\containers\\\\arraysinhooks.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from \"react\";\n\nfunction ArraysinHooks() {\n  const {\n    0: inputVal,\n    1: setInputVal\n  } = useState({\n    x: \"\"\n  });\n  const {\n    0: myArray,\n    1: setArrayValues\n  } = useState([\"a\", \"b\", \"c\", \"d\"]);\n\n  const consoleVal = () => {\n    console.log(\"The value in the arrya\", inputVal);\n    console.log(\"The value in the arrya () \", myArray);\n    let c = inputVal.x;\n    myArray.push(c);\n    setArrayValues(myArray);\n    console.log(\"The value in the arrya () final \", myArray);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"Hooks demo using array\"), __jsx(\"input\", {\n    type: \"text\",\n    value: inputVal.x,\n    onChange: e => setInputVal(_objectSpread({}, inputVal, {\n      x: e.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    onClick: consoleVal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \" Submit \"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \" The items in the array are \", myArray));\n}\n\nexport default ArraysinHooks;","map":{"version":3,"sources":["D:/RandDChamber/LogwardPlugin/ProjectManagement/PMA/containers/arraysinhooks.js"],"names":["useState","ArraysinHooks","inputVal","setInputVal","x","myArray","setArrayValues","consoleVal","console","log","c","push","e","target","value"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,SAASC,aAAT,GAAyB;AAErB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BH,QAAQ,CAAC;AAAEI,IAAAA,CAAC,EAAE;AAAL,GAAD,CAAxC;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAA4BN,QAAQ,CAAC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAD,CAA1C;;AAGA,QAAMO,UAAU,GAAG,MAAM;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCP,QAAtC;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CJ,OAA1C;AACA,QAAIK,CAAC,GAAGR,QAAQ,CAACE,CAAjB;AACAC,IAAAA,OAAO,CAACM,IAAR,CAAaD,CAAb;AACAJ,IAAAA,cAAc,CAACD,OAAD,CAAd;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDJ,OAAhD;AACH,GAPD;;AASA,SACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFJ,EAGI;AAAO,IAAA,IAAI,EAAC,MAAZ;AACI,IAAA,KAAK,EAAEH,QAAQ,CAACE,CADpB;AAEI,IAAA,QAAQ,EAAEQ,CAAC,IAAIT,WAAW,mBAAMD,QAAN;AAAgBE,MAAAA,CAAC,EAAEQ,CAAC,CAACC,MAAF,CAASC;AAA5B,OAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAQI;AAAQ,IAAA,OAAO,EAAEP,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAkCF,OAAlC,CATJ,CADJ;AAcH;;AAED,eAAeJ,aAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction ArraysinHooks() {\r\n\r\n    const [inputVal, setInputVal] = useState({ x: \"\" })\r\n    const [myArray, setArrayValues] = useState([\"a\", \"b\", \"c\", \"d\"])\r\n\r\n\r\n    const consoleVal = () => {\r\n        console.log(\"The value in the arrya\", inputVal)\r\n        console.log(\"The value in the arrya () \", myArray)\r\n        let c = inputVal.x;\r\n        myArray.push(c)\r\n        setArrayValues(myArray)\r\n        console.log(\"The value in the arrya () final \", myArray)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <hr />\r\n            <div>Hooks demo using array</div>\r\n            <input type=\"text\"\r\n                value={inputVal.x}\r\n                onChange={e => setInputVal({ ...inputVal, x: e.target.value })}\r\n\r\n            />\r\n            <button onClick={consoleVal}> Submit </button>\r\n            <div> The items in the array are {myArray}</div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ArraysinHooks;"]},"metadata":{},"sourceType":"module"}