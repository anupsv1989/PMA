{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\RandDChamber\\\\LogwardAssignment\\\\ProjectManagement\\\\PMA\\\\containers\\\\parentReleaseList.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState } from \"react\";\nimport { Table, Tag, Form, Input } from 'antd';\nimport AddParentRelease from './addParentRelease';\n\nvar ReleaseList = /*#__PURE__*/function (_Component) {\n  _inherits(ReleaseList, _Component);\n\n  var _super = _createSuper(ReleaseList);\n\n  // const[editingKey, setEditingKey] = useState('');\n  function ReleaseList(props) {\n    var _this;\n\n    _classCallCheck(this, ReleaseList);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"edit\", function (record) {\n      console.log(\"Record\", record);\n\n      _this.setState({\n        isEdit: true,\n        columns: [{\n          title: 'Version No',\n          dataIndex: 'version',\n          key: 'version',\n          render: function render(record) {\n            return __jsx(Form.Item, {\n              label: \"version\",\n              name: \"version\",\n              rules: [{\n                required: true,\n                message: 'Please input your version!'\n              }],\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 29\n              }\n            }, __jsx(Input, {\n              value: record.version,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }\n            }));\n          }\n        }, {\n          title: 'Status',\n          dataIndex: 'status',\n          key: 'status'\n        }, {\n          title: 'Progress',\n          dataIndex: 'progress',\n          key: 'progress'\n        }, {\n          title: 'Start Date',\n          dataIndex: 'startDate',\n          key: 'startDate'\n        }, {\n          title: 'Release Date',\n          dataIndex: 'endDate',\n          key: 'endDate'\n        }, {\n          title: 'Description',\n          dataIndex: 'description',\n          key: 'description'\n        }, {\n          title: 'Action',\n          key: 'action',\n          render: function render(text, record) {\n            return __jsx(\"span\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 25\n              }\n            }, __jsx(\"a\", {\n              style: {\n                marginRight: 16\n              },\n              onClick: function onClick() {\n                return _this.edit(record);\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 29\n              }\n            }, \"Edit\"), __jsx(\"a\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 29\n              }\n            }, \"Delete\"));\n          }\n        }]\n      }); // form.setFieldsValue({ ...record });\n      // setEditingKey(record.key);\n\n    });\n\n    _this.state = {\n      columns: [{\n        title: 'Version No',\n        dataIndex: 'version',\n        key: 'version',\n        render: function render(text) {\n          return __jsx(\"a\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 37\n            }\n          }, text);\n        }\n      }, {\n        title: 'Status',\n        dataIndex: 'status',\n        key: 'status'\n      }, {\n        title: 'Progress',\n        dataIndex: 'progress',\n        key: 'progress'\n      }, {\n        title: 'Start Date',\n        dataIndex: 'startDate',\n        key: 'startDate'\n      }, {\n        title: 'Release Date',\n        dataIndex: 'endDate',\n        key: 'endDate'\n      }, {\n        title: 'Description',\n        dataIndex: 'description',\n        key: 'description'\n      }, {\n        title: 'Action',\n        key: 'action',\n        render: function render(text, record) {\n          return __jsx(\"span\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }\n          }, __jsx(\"a\", {\n            style: {\n              marginRight: 16\n            },\n            onClick: function onClick() {\n              return _this.edit(record);\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }\n          }, \"Edit\"), __jsx(\"a\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }\n          }, \"Delete\"));\n        }\n      }],\n      listDataSrc: [],\n      isEdit: false\n    };\n    return _this;\n  }\n\n  _createClass(ReleaseList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var chkItem = JSON.parse(localStorage.getItem(\"parentReleaseData\"));\n      var getItems = chkItem == null ? [] : chkItem;\n      this.setState({\n        listDataSrc: getItems\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          columns = _this$state.columns,\n          listDataSrc = _this$state.listDataSrc;\n      return __jsx(React.Fragment, null, __jsx(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }, __jsx(Table, {\n        columns: columns,\n        dataSource: listDataSrc,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }\n      })), __jsx(AddParentRelease, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return ReleaseList;\n}(Component);\n\nexport { ReleaseList as default };","map":{"version":3,"sources":["D:/RandDChamber/LogwardAssignment/ProjectManagement/PMA/containers/parentReleaseList.js"],"names":["React","Component","useState","Table","Tag","Form","Input","AddParentRelease","ReleaseList","props","record","console","log","setState","isEdit","columns","title","dataIndex","key","render","required","message","version","text","marginRight","edit","state","listDataSrc","chkItem","JSON","parse","localStorage","getItem","getItems"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport { Table, Tag, Form, Input } from 'antd';\r\nimport AddParentRelease from './addParentRelease';\r\n\r\n\r\n\r\n\r\n\r\nexport default class ReleaseList extends Component {\r\n\r\n    // const[editingKey, setEditingKey] = useState('');\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            columns: [\r\n                {\r\n                    title: 'Version No',\r\n                    dataIndex: 'version',\r\n                    key: 'version',\r\n                    render: text => <a>{text}</a>,\r\n                },\r\n                {\r\n                    title: 'Status',\r\n                    dataIndex: 'status',\r\n                    key: 'status',\r\n                },\r\n                {\r\n                    title: 'Progress',\r\n                    dataIndex: 'progress',\r\n                    key: 'progress',\r\n                },\r\n                {\r\n                    title: 'Start Date',\r\n                    dataIndex: 'startDate',\r\n                    key: 'startDate',\r\n                },\r\n                {\r\n                    title: 'Release Date',\r\n                    dataIndex: 'endDate',\r\n                    key: 'endDate',\r\n                },\r\n                {\r\n                    title: 'Description',\r\n                    dataIndex: 'description',\r\n                    key: 'description',\r\n                },\r\n                {\r\n                    title: 'Action',\r\n                    key: 'action',\r\n                    render: (text, record) => (\r\n                        <span>\r\n                            <a style={{ marginRight: 16 }} onClick={() => this.edit(record)}>Edit</a>\r\n                            <a>Delete</a>\r\n                        </span>\r\n                    ),\r\n                },\r\n            ],\r\n            listDataSrc: [],\r\n            isEdit: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let chkItem = JSON.parse(localStorage.getItem(\"parentReleaseData\"));\r\n        let getItems = chkItem == null ? [] : chkItem;\r\n        this.setState({\r\n            listDataSrc: getItems\r\n        })\r\n    }\r\n\r\n    edit = (record) => {\r\n        console.log(\"Record\", record)\r\n        this.setState({\r\n            isEdit: true,\r\n            columns: [\r\n                {\r\n                    title: 'Version No',\r\n                    dataIndex: 'version',\r\n                    key: 'version',\r\n                    render: (record) => {\r\n                        return (\r\n                            <Form.Item\r\n                                label=\"version\"\r\n                                name=\"version\"\r\n                                rules={[{ required: true, message: 'Please input your version!' }]}\r\n                            >\r\n                                <Input value={record.version} />\r\n                            </Form.Item>\r\n                        );\r\n                    },\r\n                },\r\n                {\r\n                    title: 'Status',\r\n                    dataIndex: 'status',\r\n                    key: 'status',\r\n                },\r\n                {\r\n                    title: 'Progress',\r\n                    dataIndex: 'progress',\r\n                    key: 'progress',\r\n                },\r\n                {\r\n                    title: 'Start Date',\r\n                    dataIndex: 'startDate',\r\n                    key: 'startDate',\r\n                },\r\n                {\r\n                    title: 'Release Date',\r\n                    dataIndex: 'endDate',\r\n                    key: 'endDate',\r\n                },\r\n                {\r\n                    title: 'Description',\r\n                    dataIndex: 'description',\r\n                    key: 'description',\r\n                },\r\n                {\r\n                    title: 'Action',\r\n                    key: 'action',\r\n                    render: (text, record) => (\r\n                        <span>\r\n                            <a style={{ marginRight: 16 }} onClick={() => this.edit(record)}>Edit</a>\r\n                            <a>Delete</a>\r\n                        </span>\r\n                    ),\r\n                },\r\n            ]\r\n        })\r\n        // form.setFieldsValue({ ...record });\r\n        // setEditingKey(record.key);\r\n    }\r\n\r\n    render() {\r\n        let { columns, listDataSrc } = this.state\r\n        return (\r\n            <>\r\n                <Form >\r\n                    <Table columns={columns} dataSource={listDataSrc} />\r\n                </Form>\r\n                <AddParentRelease />\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}