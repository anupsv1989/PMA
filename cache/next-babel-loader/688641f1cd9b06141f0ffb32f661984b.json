{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Form, Input, Button, Row, Col, DatePicker } from 'antd';\nimport { dateFormat } from \"../commons/helpers\";\nimport moment from 'moment';\nvar layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nvar tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nvar AddParentRelease = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(AddParentRelease, _React$PureComponent);\n\n  var _super = _createSuper(AddParentRelease);\n\n  function AddParentRelease(props) {\n    var _this;\n\n    _classCallCheck(this, AddParentRelease);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"onFinish\", function (values) {\n      console.log(\"on ifinsh\", values);\n      console.log(\"Date\", values['startDate']);\n      var defDate = new Date();\n      console.log(\"Date\", moment(defDate).format(dateFormat));\n      var arr = _this.state.localPRItems;\n      var prObj = {\n        key: new Date().getTime(),\n        version: values.version,\n        status: \"\",\n        progress: 0,\n        startDate: values['startDate'] ? values['startDate'].format(dateFormat) : moment(defDate).format(dateFormat),\n        endDate: values['endDate'] ? values['endDate'].format(dateFormat) : moment(defDate).format(dateFormat),\n        description: values.description,\n        childRelease: []\n      };\n      console.log(\"prObj\", prObj);\n      console.log(\"arr\", arr);\n      arr.push(prObj);\n      localStorage.setItem(\"parentReleaseData\", JSON.stringify(arr));\n\n      _this.props.refreshCallBack();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFinishFailed\", function () {\n      console.log(\"on ifinsh failed\");\n    });\n\n    _this.state = {\n      localPRItems: []\n    };\n    return _this;\n  }\n\n  _createClass(AddParentRelease, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var chkItem = JSON.parse(localStorage.getItem(\"parentReleaseData\"));\n      var getItems = chkItem == null ? [] : chkItem;\n      this.setState({\n        localPRItems: getItems\n      });\n      console.log(\"DID mount\", getItems);\n      console.log(\"DID mount localPRItems\", this.state.localPRItems);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(Form, {\n        name: \"basic\",\n        initialValues: {\n          remember: true\n        },\n        onFinish: this.onFinish,\n        onFinishFailed: this.onFinishFailed\n      }, __jsx(\"div\", {\n        className: \"parent-release-sec\"\n      }, __jsx(Row, null, __jsx(Col, {\n        span: 5,\n        className: \"parent-release-sec-col\"\n      }, __jsx(Form.Item, {\n        label: \"Version\",\n        name: \"version\",\n        rules: [{\n          required: true,\n          message: 'Please input your version!'\n        }]\n      }, __jsx(Input, null))), __jsx(Col, {\n        span: 4,\n        className: \"parent-release-sec-col\"\n      }, __jsx(Form.Item, {\n        label: \"Start Date\",\n        name: \"startDate\"\n      }, __jsx(DatePicker, {\n        defaultValue: moment(new Date(), dateFormat)\n      }))), __jsx(Col, {\n        span: 4,\n        className: \"parent-release-sec-col\"\n      }, __jsx(Form.Item, {\n        label: \"Release Date\",\n        name: \"endDate\"\n      }, __jsx(DatePicker, {\n        defaultValue: moment(new Date(), dateFormat)\n      }))), __jsx(Col, {\n        span: 5,\n        className: \"parent-release-sec-col\"\n      }, __jsx(Form.Item, {\n        label: \"Description\",\n        name: \"description\"\n      }, __jsx(Input, null))), __jsx(Col, {\n        span: 4,\n        className: \"parent-release-sec-col\"\n      }, __jsx(Form.Item, tailLayout, __jsx(Button, {\n        type: \"primary\",\n        htmlType: \"submit\"\n      }, \"Submit\")))))));\n    }\n  }]);\n\n  return AddParentRelease;\n}(React.PureComponent);\n\nexport { AddParentRelease as default };","map":null,"metadata":{},"sourceType":"module"}