{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchUser),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(ageUpAsync),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { call, put, takeEvery, takeLatest } from 'redux-saga/effects';\n\nfunction fetchUser(action) {\n  return _regeneratorRuntime.wrap(function fetchUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return put({\n            type: \"USER_FETCH_SUCCEEDED\",\n            user: user\n          });\n\n        case 3:\n          _context.next = 9;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 9;\n          return put({\n            type: \"USER_FETCH_FAILED\",\n            message: _context.t0.message\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 5]]);\n}\n\nfunction ageUpAsync() {\n  return _regeneratorRuntime.wrap(function ageUpAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return delay(4000);\n\n        case 2:\n          _context2.next = 4;\n          return put({\n            type: \"AGE_UP_ASYNC\",\n            value: 1\n          });\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n} // export function* watchAgeUp() {\n//     yield takeLatest(\"AGE_UP\", ageUpAsync);\n// }\n\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeEvery(\"USER_FETCH_REQUESTED\", fetchUser);\n\n        case 2:\n          _context3.next = 4;\n          return takeEvery(\"AGE_UP\", ageUpAsync);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["D:/RandDChamber/LogwardAssignment/ProjectManagement/PMA/redux/saga.js"],"names":["fetchUser","ageUpAsync","rootSaga","call","put","takeEvery","takeLatest","action","type","user","message","delay","value"],"mappings":";;oDAEUA,S;qDAUAC,U;qDAUeC,Q;;AAtBzB,SAASC,IAAT,EAAeC,GAAf,EAAoBC,SAApB,EAA+BC,UAA/B,QAAiD,oBAAjD;;AAEA,SAAUN,SAAV,CAAoBO,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGQ,iBAAMH,GAAG,CAAC;AAAEI,YAAAA,IAAI,EAAE,sBAAR;AAAgCC,YAAAA,IAAI,EAAEA;AAAtC,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKQ,iBAAML,GAAG,CAAC;AAAEI,YAAAA,IAAI,EAAE,mBAAR;AAA6BE,YAAAA,OAAO,EAAE,YAAEA;AAAxC,WAAD,CAAT;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAUT,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMU,KAAK,CAAC,IAAD,CAAX;;AADJ;AAAA;AAEI,iBAAMP,GAAG,CAAC;AAAEI,YAAAA,IAAI,EAAE,cAAR;AAAwBI,YAAAA,KAAK,EAAE;AAA/B,WAAD,CAAT;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAKA;AACA;AACA;;;AAGA,eAAe,SAAUV,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMG,SAAS,CAAC,sBAAD,EAAyBL,SAAzB,CAAf;;AADW;AAAA;AAEX,iBAAMK,SAAS,CAAC,QAAD,EAAWJ,UAAX,CAAf;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, put, takeEvery, takeLatest } from 'redux-saga/effects';\r\n\r\nfunction* fetchUser(action) {\r\n    try {\r\n        // const user = yield call(Api.fetchUser, action.payload.userId);\r\n        yield put({ type: \"USER_FETCH_SUCCEEDED\", user: user });\r\n    } catch (e) {\r\n        yield put({ type: \"USER_FETCH_FAILED\", message: e.message });\r\n    }\r\n}\r\n\r\n\r\nfunction* ageUpAsync() {\r\n    yield delay(4000);\r\n    yield put({ type: \"AGE_UP_ASYNC\", value: 1 });\r\n}\r\n\r\n// export function* watchAgeUp() {\r\n//     yield takeLatest(\"AGE_UP\", ageUpAsync);\r\n// }\r\n\r\n\r\nexport default function* rootSaga() {\r\n    yield takeEvery(\"USER_FETCH_REQUESTED\", fetchUser);\r\n    yield takeEvery(\"AGE_UP\", ageUpAsync);\r\n}"]},"metadata":{},"sourceType":"module"}