{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\RandDChamber\\\\LogwardAssignment\\\\ProjectManagement\\\\PMA\\\\containers\\\\parentReleaseList.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState, version } from \"react\";\nimport { Table, Tag, Form, Input, InputNumber, Popconfirm, Row, Col, Dropdown, Progress, DatePicker, Select, Slider, Popover, Button, Modal, Badge } from 'antd';\nimport AddParentRelease from './addParentRelease';\nimport moment from 'moment';\nimport AddChildRelease from \"./addChildRelease\";\nimport ChildReleaseList from \"./ChildReleaseList\";\nvar dateFormat = \"DD-MM-YYYY\";\n\nvar ReleaseList = /*#__PURE__*/function (_Component) {\n  _inherits(ReleaseList, _Component);\n\n  var _super = _createSuper(ReleaseList);\n\n  function ReleaseList(props) {\n    var _this2;\n\n    _classCallCheck(this, ReleaseList);\n\n    _this2 = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this2), \"addChildItem\", function (rec) {\n      console.log(\"children \", rec);\n\n      _this2.setState({\n        modalVisible: true,\n        currentRecord: rec\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"deleteItem\", function (rec) {});\n\n    _defineProperty(_assertThisInitialized(_this2), \"EditableCell\", function (_ref) {\n      var editing = _ref.editing,\n          dataIndex = _ref.dataIndex,\n          title = _ref.title,\n          inputType = _ref.inputType,\n          record = _ref.record,\n          index = _ref.index,\n          children = _ref.children,\n          restProps = _objectWithoutProperties(_ref, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n      // console.log(\"started 1\", children)\n      // console.log(\"started 2\", record)\n      // console.log(\"started 4\", dataIndex)\n      // console.log(\"started 5\", title)\n      var inputNode;\n\n      switch (dataIndex) {\n        case \"version\":\n          inputNode = __jsx(Input, {\n            defaultValue: record.version,\n            name: \"version\",\n            onChange: _this2.handleVersion,\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }\n          });\n          break;\n\n        case \"startDate\":\n          inputNode = __jsx(DatePicker, {\n            name: \"startDate\",\n            defaultValue: moment(record.startDate, dateFormat),\n            onChange: _this2.handleStartDate,\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }\n          });\n          break;\n\n        case \"endDate\":\n          inputNode = __jsx(DatePicker, {\n            name: \"endDate\",\n            defaultValue: moment(record.endDate, dateFormat),\n            onChange: _this2.handleEndDate,\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }\n          });\n          break;\n\n        case \"description\":\n          inputNode = __jsx(Input, {\n            defaultValue: record.description,\n            onChange: _this2.handleDescription,\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }\n          });\n          break;\n\n        case \"status\":\n          inputNode = __jsx(Select, {\n            style: {\n              width: 120\n            },\n            name: \"status\",\n            onChange: _this2.handleChange,\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 21\n            }\n          }, __jsx(Option, {\n            value: \"IN PROGRESS\",\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 25\n            }\n          }, \"In Progress\"), __jsx(Option, {\n            value: \"UNRELEASED\",\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 25\n            }\n          }, \"Unreleased\"), __jsx(Option, {\n            value: \"RELEASED\",\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 25\n            }\n          }, \"Released\")); // onChange = { handleChange }\n\n          break;\n\n        case \"progress\":\n          inputNode = __jsx(Slider, {\n            defaultValue: 30,\n            tooltipVisible: true,\n            name: \"progress\",\n            onChange: _this2.handleSlider,\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }\n          });\n          break;\n\n        default: // code block\n\n      } // const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\n\n\n      return __jsx(\"td\", _extends({}, restProps, {\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }\n      }), editing ? __jsx(Form.Item, {\n        name: dataIndex,\n        style: {\n          margin: 0\n        },\n        rules: [{\n          required: true,\n          message: \"Please Input \".concat(title, \"!\")\n        }],\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }\n      }, inputNode) : children); // }\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"handleChange\", function (value) {\n      console.log(\"Vlaue\", value);\n\n      _this2.setState({\n        editStatus: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"handleSlider\", function (value) {\n      console.log(\"slider Vlaue\", value);\n\n      _this2.setState({\n        editProgress: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"handleStartDate\", function (date, str) {\n      console.log(\"sliceer sd str\", str);\n\n      _this2.setState({\n        editstartDate: str\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"handleEndDate\", function (date, str) {\n      console.log(\"sliceer ed\", str);\n\n      _this2.setState({\n        editEndDate: str\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"handleDescription\", function (e) {\n      console.log(\"sliceer desc\", e.target.value);\n\n      _this2.setState({\n        editDescription: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"handleVersion\", function (e) {\n      console.log(\"sliceer vers\", e.target.value);\n\n      _this2.setState({\n        editVersion: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"isEditing\", function (record) {\n      return record.key === _this2.state.editingKey;\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"cancel\", function () {\n      _this2.setState({\n        editingKey: ''\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"handleCancel\", function () {\n      _this2.setState({\n        modalVisible: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"handleOk\", function () {\n      _this2.setState({\n        modalVisible: false\n      });\n    });\n\n    var _this = _assertThisInitialized(_this2);\n\n    _this2.state = {\n      editingKey: '',\n      editVersion: \"\",\n      editStatus: \"\",\n      editProgress: \"\",\n      editstartDate: \"\",\n      editEndDate: \"\",\n      editDescription: \"\",\n      modalVisible: false,\n      currentRecord: {},\n      columns: [{\n        title: 'Version No',\n        dataIndex: 'version',\n        key: 'version',\n        render: function render(text) {\n          return __jsx(\"a\", {\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 37\n            }\n          }, text);\n        },\n        editable: true\n      }, {\n        title: 'Status',\n        dataIndex: 'status',\n        key: 'status',\n        editable: true\n      }, {\n        title: 'Progress',\n        dataIndex: 'progress',\n        key: 'progress',\n        editable: true,\n        render: function render(rec) {\n          return __jsx(Progress, {\n            strokeColor: {\n              '0%': '#108ee9',\n              '100%': '#87d068'\n            },\n            percent: rec,\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }\n          });\n        }\n      }, {\n        title: 'Start Date',\n        dataIndex: 'startDate',\n        key: 'startDate',\n        editable: true\n      }, {\n        title: 'Release Date',\n        dataIndex: 'endDate',\n        key: 'endDate',\n        editable: true\n      }, {\n        title: 'Description',\n        dataIndex: 'description',\n        key: 'description',\n        editable: true\n      }, {\n        title: 'Action',\n        key: 'action',\n        render: function render(text, record) {\n          var editable = _this2.isEditing(record);\n\n          var Content = __jsx(\"div\", {\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }\n          }, __jsx(Row, {\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }\n          }, __jsx(Col, {\n            span: 8,\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }\n          }, __jsx(\"a\", {\n            disabled: _this2.state.editingKey !== '',\n            onClick: function onClick() {\n              return _this2.edit(record);\n            },\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 51\n            }\n          }, \"Edit\")), __jsx(Col, {\n            span: 8,\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }\n          }, __jsx(\"a\", {\n            disabled: _this2.state.editingKey !== '',\n            onClick: function onClick() {\n              return _this2.addChildItem(record);\n            },\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 51\n            }\n          }, \"Add\")), __jsx(Col, {\n            span: 8,\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }\n          }, __jsx(\"a\", {\n            disabled: _this2.state.editingKey !== '',\n            onClick: function onClick() {\n              return _this2.deleteItem(record);\n            },\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 51\n            }\n          }, \"Delete\"))));\n\n          return editable ? __jsx(\"span\", {\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }\n          }, __jsx(\"a\", {\n            href: \"javascript:;\",\n            onClick: function onClick() {\n              return _this2.save(record);\n            },\n            style: {\n              marginRight: 8\n            },\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }\n          }, \"Save\"), __jsx(Popconfirm, {\n            title: \"Sure to cancel?\",\n            onConfirm: _this2.cancel,\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }\n          }, __jsx(\"a\", {\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 37\n            }\n          }, \"Cancel\"))) : __jsx(Popover, {\n            content: Content,\n            title: \"Title\",\n            trigger: \"hover\",\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }\n          }, __jsx(Button, {\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 37\n            }\n          }, \"Hover me\"));\n        }\n      }],\n      listDataSrc: [],\n      isEdit: false\n    };\n    return _this2;\n  }\n\n  _createClass(ReleaseList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var chkItem = JSON.parse(localStorage.getItem(\"parentReleaseData\"));\n      var getItems = chkItem == null ? [] : chkItem;\n      this.setState({\n        listDataSrc: getItems\n      });\n    }\n  }, {\n    key: \"save\",\n    value: function save(record) {\n      console.log(\"Form submit\", record);\n      var _this$state = this.state,\n          editVersion = _this$state.editVersion,\n          editstartDate = _this$state.editstartDate,\n          editEndDate = _this$state.editEndDate,\n          editDescription = _this$state.editDescription,\n          editStatus = _this$state.editStatus,\n          editProgress = _this$state.editProgress,\n          listDataSrc = _this$state.listDataSrc; // let arr = this.state.localPRItems;\n      // let prObj = {\n      //     key: record.key,\n      //     version: editVersion,\n      //     status: editStatus,\n      //     progress: editProgress,\n      //     startDate: editstartDate,\n      //     endDate: editEndDate,\n      //     description: editDescription\n      // }\n      // console.log(\"Presnet Obj\", prObj)\n\n      console.log(\"Presnet Obj list form before\", listDataSrc);\n      listDataSrc.map(function (item) {\n        if (item.key == record.key) {\n          item.key = record.key;\n          item.childRelease = item.childRelease;\n          item.version = editVersion != \"\" ? editVersion : item.version;\n          item.status = editStatus != \"\" ? editStatus : item.status;\n          item.progress = editProgress != \"\" ? editProgress : item.progress;\n          item.startDate = editstartDate != \"\" ? editstartDate : item.startDate;\n          item.endDate = editEndDate != \"\" ? editEndDate : item.endDate;\n          item.description = editDescription != \"\" ? editDescription : item.description;\n        }\n      });\n      console.log(\"Presnet Obj list form after \", listDataSrc);\n      localStorage.setItem('parentReleaseData', JSON.stringify(listDataSrc));\n    }\n  }, {\n    key: \"edit\",\n    value: function edit(record) {\n      this.setState({\n        editingKey: record.key\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var listDataSrc = this.state.listDataSrc;\n      var components = {\n        body: {\n          cell: this.EditableCell\n        }\n      };\n      var columns = this.state.columns.map(function (col) {\n        if (!col.editable) {\n          return col;\n        }\n\n        return _objectSpread({}, col, {\n          onCell: function onCell(record) {\n            return {\n              record: record,\n              inputType: col.dataIndex,\n              dataIndex: col.dataIndex,\n              title: col.title,\n              editing: _this3.isEditing(record)\n            };\n          }\n        });\n      });\n      var expandedRowRender = {};\n      return __jsx(React.Fragment, null, __jsx(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 17\n        }\n      }, __jsx(Table, {\n        columns: columns,\n        dataSource: listDataSrc,\n        components: components,\n        expandable: {\n          expandedRowRender: function expandedRowRender(record) {\n            return __jsx(ChildReleaseList, {\n              record: record,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 58\n              }\n            });\n          }\n        },\n        rowClassName: \"editable-row\",\n        pagination: {\n          onChange: this.cancel\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }\n      })), __jsx(AddParentRelease, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 17\n        }\n      }), __jsx(Modal, {\n        title: \"Basic Modal\",\n        visible: this.state.modalVisible,\n        onOk: this.handleOk,\n        closable: true,\n        className: \"modal-Layout\",\n        onCancel: this.handleCancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 17\n        }\n      }, __jsx(AddChildRelease, {\n        thisData: this.state.currentRecord,\n        closeModal: this.handleOk,\n        dbData: listDataSrc,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return ReleaseList;\n}(Component);\n\nexport { ReleaseList as default };","map":{"version":3,"sources":["D:/RandDChamber/LogwardAssignment/ProjectManagement/PMA/containers/parentReleaseList.js"],"names":["React","Component","useState","version","Table","Tag","Form","Input","InputNumber","Popconfirm","Row","Col","Dropdown","Progress","DatePicker","Select","Slider","Popover","Button","Modal","Badge","AddParentRelease","moment","AddChildRelease","ChildReleaseList","dateFormat","ReleaseList","props","rec","console","log","setState","modalVisible","currentRecord","editing","dataIndex","title","inputType","record","index","children","restProps","inputNode","handleVersion","startDate","handleStartDate","endDate","handleEndDate","description","handleDescription","width","handleChange","handleSlider","margin","required","message","value","editStatus","editProgress","date","str","editstartDate","editEndDate","e","target","editDescription","editVersion","key","state","editingKey","_this","columns","render","text","editable","isEditing","Content","edit","addChildItem","deleteItem","save","marginRight","cancel","listDataSrc","isEdit","chkItem","JSON","parse","localStorage","getItem","getItems","map","item","childRelease","status","progress","setItem","stringify","components","body","cell","EditableCell","col","onCell","expandedRowRender","onChange","handleOk","handleCancel"],"mappings":"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","sourcesContent":["import React, { Component, useState, version } from \"react\";\r\nimport {\r\n    Table, Tag, Form, Input, InputNumber, Popconfirm, Row, Col, Dropdown,\r\n    Progress, DatePicker, Select, Slider, Popover, Button, Modal, Badge\r\n} from 'antd';\r\nimport AddParentRelease from './addParentRelease';\r\nimport moment from 'moment';\r\nimport AddChildRelease from \"./addChildRelease\";\r\nimport ChildReleaseList from \"./ChildReleaseList\";\r\n\r\nconst dateFormat = \"DD-MM-YYYY\";\r\n\r\n\r\n\r\nexport default class ReleaseList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let _this = this;\r\n        this.state = {\r\n            editingKey: '',\r\n            editVersion: \"\",\r\n            editStatus: \"\",\r\n            editProgress: \"\",\r\n            editstartDate: \"\",\r\n            editEndDate: \"\",\r\n            editDescription: \"\",\r\n            modalVisible: false,\r\n            currentRecord: {},\r\n            columns: [\r\n                {\r\n                    title: 'Version No',\r\n                    dataIndex: 'version',\r\n                    key: 'version',\r\n                    render: text => <a>{text}</a>,\r\n                    editable: true,\r\n                },\r\n                {\r\n                    title: 'Status',\r\n                    dataIndex: 'status',\r\n                    key: 'status',\r\n                    editable: true,\r\n                },\r\n                {\r\n                    title: 'Progress',\r\n                    dataIndex: 'progress',\r\n                    key: 'progress',\r\n                    editable: true,\r\n                    render: (rec) => (\r\n                        <Progress\r\n                            strokeColor={{\r\n                                '0%': '#108ee9',\r\n                                '100%': '#87d068',\r\n                            }}\r\n                            percent={rec}\r\n                        />\r\n                    ),\r\n                },\r\n                {\r\n                    title: 'Start Date',\r\n                    dataIndex: 'startDate',\r\n                    key: 'startDate',\r\n                    editable: true,\r\n                },\r\n                {\r\n                    title: 'Release Date',\r\n                    dataIndex: 'endDate',\r\n                    key: 'endDate',\r\n                    editable: true,\r\n                },\r\n                {\r\n                    title: 'Description',\r\n                    dataIndex: 'description',\r\n                    key: 'description',\r\n                    editable: true,\r\n                },\r\n                {\r\n                    title: 'Action',\r\n                    key: 'action',\r\n                    render: (text, record) => {\r\n                        const editable = this.isEditing(record);\r\n                        const Content = (\r\n                            <div>\r\n                                <Row>\r\n                                    <Col span={8}><a disabled={this.state.editingKey !== ''} onClick={() => this.edit(record)}>Edit</a></Col>\r\n                                    <Col span={8}><a disabled={this.state.editingKey !== ''} onClick={() => this.addChildItem(record)}>Add</a></Col>\r\n                                    <Col span={8}><a disabled={this.state.editingKey !== ''} onClick={() => this.deleteItem(record)}>Delete</a></Col>\r\n                                </Row>\r\n                            </div>\r\n                        );\r\n                        return editable ? (\r\n                            <span>\r\n                                <a\r\n                                    href=\"javascript:;\"\r\n                                    onClick={() => this.save(record)}\r\n                                    style={{\r\n                                        marginRight: 8,\r\n                                    }}\r\n                                >\r\n                                    Save\r\n                            </a>\r\n                                <Popconfirm title=\"Sure to cancel?\" onConfirm={this.cancel}>\r\n                                    <a>Cancel</a>\r\n                                </Popconfirm>\r\n                            </span>\r\n                        ) : (\r\n                                <Popover content={Content} title=\"Title\" trigger=\"hover\">\r\n                                    <Button>Hover me</Button>\r\n                                </Popover>\r\n                            );\r\n                    }\r\n                }\r\n            ],\r\n\r\n            listDataSrc: [],\r\n            isEdit: false\r\n        }\r\n    }\r\n\r\n\r\n    addChildItem = (rec) => {\r\n        console.log(\"children \", rec)\r\n        this.setState({\r\n            modalVisible: true,\r\n            currentRecord: rec\r\n        })\r\n    }\r\n\r\n    deleteItem = (rec) => {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        let chkItem = JSON.parse(localStorage.getItem(\"parentReleaseData\"));\r\n        let getItems = chkItem == null ? [] : chkItem;\r\n        this.setState({\r\n            listDataSrc: getItems\r\n        })\r\n    }\r\n\r\n    EditableCell = ({\r\n        editing,\r\n        dataIndex,\r\n        title,\r\n        inputType,\r\n        record,\r\n        index,\r\n        children,\r\n        ...restProps\r\n    }) => {\r\n        // console.log(\"started 1\", children)\r\n        // console.log(\"started 2\", record)\r\n        // console.log(\"started 4\", dataIndex)\r\n        // console.log(\"started 5\", title)\r\n        let inputNode;\r\n\r\n\r\n        switch (dataIndex) {\r\n            case \"version\":\r\n                inputNode = <Input defaultValue={record.version} name=\"version\" onChange={this.handleVersion} />\r\n                break;\r\n            case \"startDate\":\r\n                inputNode = <DatePicker name=\"startDate\" defaultValue={moment(record.startDate, dateFormat)} onChange={this.handleStartDate} />\r\n                break;\r\n            case \"endDate\":\r\n                inputNode = <DatePicker name=\"endDate\" defaultValue={moment(record.endDate, dateFormat)} onChange={this.handleEndDate} />\r\n                break;\r\n            case \"description\":\r\n                inputNode = <Input defaultValue={record.description} onChange={this.handleDescription} />\r\n                break;\r\n            case \"status\":\r\n                inputNode =\r\n                    <Select style={{ width: 120 }} name=\"status\" onChange={this.handleChange}>\r\n                        <Option value=\"IN PROGRESS\">In Progress</Option>\r\n                        <Option value=\"UNRELEASED\">Unreleased</Option>\r\n                        <Option value=\"RELEASED\">Released</Option>\r\n                    </Select>\r\n                // onChange = { handleChange }\r\n                break;\r\n            case \"progress\":\r\n                inputNode = <Slider defaultValue={30} tooltipVisible name=\"progress\" onChange={this.handleSlider} />\r\n                break;\r\n            default:\r\n            // code block\r\n        }\r\n\r\n        // const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\r\n        return (\r\n            <td {...restProps}>\r\n                {editing ?\r\n                    (\r\n                        <Form.Item\r\n                            name={dataIndex}\r\n                            style={{ margin: 0 }}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: `Please Input ${title}!`,\r\n                                },\r\n                            ]}\r\n                        >\r\n                            {inputNode}\r\n                        </Form.Item>\r\n\r\n                    )\r\n\r\n                    : (\r\n                        children\r\n                    )}\r\n            </td>\r\n        );\r\n        // }\r\n    };\r\n\r\n    handleChange = (value) => {\r\n        console.log(\"Vlaue\", value)\r\n        this.setState({\r\n            editStatus: value\r\n        })\r\n    }\r\n\r\n\r\n\r\n    handleSlider = (value) => {\r\n        console.log(\"slider Vlaue\", value);\r\n        this.setState({\r\n            editProgress: value\r\n        })\r\n    }\r\n    handleStartDate = (date, str) => {\r\n        console.log(\"sliceer sd str\", str)\r\n        this.setState({\r\n            editstartDate: str\r\n        })\r\n    }\r\n    handleEndDate = (date, str) => {\r\n        console.log(\"sliceer ed\", str)\r\n        this.setState({\r\n            editEndDate: str\r\n        })\r\n    }\r\n    handleDescription = (e) => {\r\n        console.log(\"sliceer desc\", e.target.value)\r\n        this.setState({\r\n            editDescription: e.target.value\r\n        })\r\n    }\r\n    handleVersion = (e) => {\r\n        console.log(\"sliceer vers\", e.target.value)\r\n        this.setState({\r\n            editVersion: e.target.value\r\n        })\r\n    }\r\n\r\n    isEditing = record => record.key === this.state.editingKey;\r\n\r\n    cancel = () => {\r\n        this.setState({ editingKey: '' });\r\n    };\r\n\r\n    save(record) {\r\n        console.log(\"Form submit\", record)\r\n        let { editVersion, editstartDate, editEndDate, editDescription, editStatus, editProgress, listDataSrc } = this.state;\r\n\r\n        // let arr = this.state.localPRItems;\r\n        // let prObj = {\r\n        //     key: record.key,\r\n        //     version: editVersion,\r\n        //     status: editStatus,\r\n        //     progress: editProgress,\r\n        //     startDate: editstartDate,\r\n        //     endDate: editEndDate,\r\n        //     description: editDescription\r\n        // }\r\n\r\n        // console.log(\"Presnet Obj\", prObj)\r\n        console.log(\"Presnet Obj list form before\", listDataSrc)\r\n\r\n\r\n        listDataSrc.map(item => {\r\n            if (item.key == record.key) {\r\n                item.key = record.key;\r\n                item.childRelease = item.childRelease;\r\n                item.version = editVersion != \"\" ? editVersion : item.version;\r\n                item.status = editStatus != \"\" ? editStatus : item.status;\r\n                item.progress = editProgress != \"\" ? editProgress : item.progress;\r\n                item.startDate = editstartDate != \"\" ? editstartDate : item.startDate;\r\n                item.endDate = editEndDate != \"\" ? editEndDate : item.endDate;\r\n                item.description = editDescription != \"\" ? editDescription : item.description;\r\n            }\r\n        })\r\n        console.log(\"Presnet Obj list form after \", listDataSrc)\r\n        localStorage.setItem('parentReleaseData', JSON.stringify(listDataSrc))\r\n    }\r\n\r\n    edit(record) {\r\n        this.setState({ editingKey: record.key });\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            modalVisible: false\r\n        })\r\n    }\r\n\r\n    handleOk = () => {\r\n        this.setState({\r\n            modalVisible: false\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        let { listDataSrc } = this.state;\r\n\r\n        const components = {\r\n            body: {\r\n                cell: this.EditableCell,\r\n            },\r\n        };\r\n\r\n        const columns = this.state.columns.map(col => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n            return {\r\n                ...col,\r\n                onCell: record => ({\r\n                    record,\r\n                    inputType: col.dataIndex,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    editing: this.isEditing(record),\r\n                }),\r\n            };\r\n        });\r\n\r\n        const expandedRowRender = {\r\n\r\n        };\r\n\r\n\r\n        return (\r\n            <>\r\n                <Form>\r\n                    <Table\r\n                        columns={columns}\r\n                        dataSource={listDataSrc}\r\n                        components={components}\r\n                        expandable={{\r\n                            expandedRowRender: record => <ChildReleaseList record={record} />,\r\n                        }}\r\n                        rowClassName=\"editable-row\"\r\n                        pagination={{\r\n                            onChange: this.cancel,\r\n                        }}\r\n                    />\r\n                </Form>\r\n                <AddParentRelease />\r\n                <Modal\r\n                    title=\"Basic Modal\"\r\n                    visible={this.state.modalVisible}\r\n                    onOk={this.handleOk}\r\n                    closable\r\n                    className=\"modal-Layout\"\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <AddChildRelease thisData={this.state.currentRecord} closeModal={this.handleOk} dbData={listDataSrc} />\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}