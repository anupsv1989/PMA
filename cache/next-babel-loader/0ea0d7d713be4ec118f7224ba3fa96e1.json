{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Input, Button, Row, Col, DatePicker } from 'antd';\nimport { dateFormat } from \"../commons/helpers\";\nimport moment from 'moment';\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\nexport default class AddParentRelease extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onFinish\", values => {\n      console.log(\"on ifinsh\", values);\n      console.log(\"Date\", values['startDate']);\n      let defDate = new Date();\n      console.log(\"Date\", moment(defDate).format(dateFormat));\n      let arr = this.state.localPRItems;\n      let prObj = {\n        key: new Date().getTime(),\n        version: values.version,\n        status: \"\",\n        progress: 0,\n        startDate: values['startDate'] ? values['startDate'].format(dateFormat) : moment(defDate).format(dateFormat),\n        endDate: values['endDate'] ? values['endDate'].format(dateFormat) : moment(defDate).format(dateFormat),\n        description: values.description,\n        childRelease: []\n      };\n      console.log(\"prObj\", prObj);\n      console.log(\"arr\", arr);\n      arr.push(prObj);\n      localStorage.setItem(\"parentReleaseData\", JSON.stringify(arr));\n      this.props.refreshCallBack();\n    });\n\n    _defineProperty(this, \"onFinishFailed\", () => {\n      console.log(\"on ifinsh failed\");\n    });\n\n    this.state = {\n      localPRItems: []\n    };\n  }\n\n  componentDidMount() {\n    let chkItem = JSON.parse(localStorage.getItem(\"parentReleaseData\"));\n    let getItems = chkItem == null ? [] : chkItem;\n    this.setState({\n      localPRItems: getItems\n    });\n    console.log(\"DID mount\", getItems);\n    console.log(\"DID mount localPRItems\", this.state.localPRItems);\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(Form, {\n      name: \"basic\",\n      initialValues: {\n        remember: true\n      },\n      onFinish: this.onFinish,\n      onFinishFailed: this.onFinishFailed\n    }, __jsx(\"div\", {\n      className: \"parent-release-sec\"\n    }, __jsx(Row, null, __jsx(Col, {\n      span: 5,\n      className: \"parent-release-sec-col\"\n    }, __jsx(Form.Item, {\n      label: \"Version\",\n      name: \"version\",\n      rules: [{\n        required: true,\n        message: 'Please input your version!'\n      }]\n    }, __jsx(Input, null))), __jsx(Col, {\n      span: 4,\n      className: \"parent-release-sec-col\"\n    }, __jsx(Form.Item, {\n      label: \"Start Date\",\n      name: \"startDate\"\n    }, __jsx(DatePicker, {\n      defaultValue: moment(new Date(), dateFormat)\n    }))), __jsx(Col, {\n      span: 4,\n      className: \"parent-release-sec-col\"\n    }, __jsx(Form.Item, {\n      label: \"Release Date\",\n      name: \"endDate\"\n    }, __jsx(DatePicker, {\n      defaultValue: moment(new Date(), dateFormat)\n    }))), __jsx(Col, {\n      span: 5,\n      className: \"parent-release-sec-col\"\n    }, __jsx(Form.Item, {\n      label: \"Description\",\n      name: \"description\"\n    }, __jsx(Input, null))), __jsx(Col, {\n      span: 4,\n      className: \"parent-release-sec-col\"\n    }, __jsx(Form.Item, tailLayout, __jsx(Button, {\n      type: \"primary\",\n      htmlType: \"submit\"\n    }, \"Submit\")))))));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}