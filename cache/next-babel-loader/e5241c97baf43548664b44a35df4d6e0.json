{"ast":null,"code":"var _jsxFileName = \"D:\\\\RandDChamber\\\\LogwardPlugin\\\\ProjectManagement\\\\PMA\\\\pages\\\\hooks.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from \"react\";\nimport { Button } from \"antd\";\nimport HooksAsFunction from \"/hooksAsFunction\";\nexport default class MyHooks extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"incrementCounter\", () => {\n      this.setState({\n        conterValue: this.state.conterValue + 1\n      });\n    });\n\n    this.state = {\n      conterValue: 0\n    };\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, \"We cannot hooks here as this is a class component.\"), __jsx(Button, {\n      onClick: this.incrementCounter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, \" Counter + \"), __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, \"Counter Value = \", this.state.conterValue), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, \"How and where hooks work ?\"), __jsx(HooksAsFunction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["D:/RandDChamber/LogwardPlugin/ProjectManagement/PMA/pages/hooks.js"],"names":["Component","Button","HooksAsFunction","MyHooks","constructor","props","setState","conterValue","state","render","incrementCounter"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,eAAP,MAA4B,kBAA5B;AAGA,eAAe,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAE3CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,8CAOA,MAAM;AACrB,WAAKC,QAAL,CAAc;AACVC,QAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWD,WAAX,GAAyB;AAD5B,OAAd;AAGH,KAXkB;;AAEf,SAAKC,KAAL,GAAa;AACTD,MAAAA,WAAW,EAAE;AADJ,KAAb;AAGH;;AAQDE,EAAAA,MAAM,GAAG;AACL,WACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DADJ,EAEI,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAqB,KAAKF,KAAL,CAAWD,WAAhC,CAHJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCALJ,EAMI,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAYH;;AA5B0C","sourcesContent":["import { Component } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport HooksAsFunction from \"/hooksAsFunction\";\r\n\r\n\r\nexport default class MyHooks extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            conterValue: 0\r\n        }\r\n    }\r\n\r\n    incrementCounter = () => {\r\n        this.setState({\r\n            conterValue: this.state.conterValue + 1\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>We cannot hooks here as this is a class component.</div>\r\n                <Button onClick={this.incrementCounter}> Counter + </Button>\r\n                <h4>Counter Value = {this.state.conterValue}</h4>\r\n\r\n                <div>How and where hooks work ?</div>\r\n                <HooksAsFunction />\r\n\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}