{"ast":null,"code":"var _jsxFileName = \"D:\\\\RandDChamber\\\\LogwardPlugin\\\\ProjectManagement\\\\PMA\\\\containers\\\\arraysinhooks.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\n\nfunction ArraysinHooks() {\n  const {\n    0: myArray,\n    1: setArrayValues\n  } = useState([]);\n\n  const addItem = () => {\n    setArrayValues([...myArray, {\n      id: myArray.length,\n      value: Math.floor(Math.random() * 10) + 1\n    }]);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"Hooks demo using array\"), __jsx(\"button\", {\n    onClick: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \" Submit \"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, myArray.map(item => {\n    __jsx(\"li\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    }, \" \", item.value);\n  }))));\n}\n\nexport default ArraysinHooks;","map":{"version":3,"sources":["D:/RandDChamber/LogwardPlugin/ProjectManagement/PMA/containers/arraysinhooks.js"],"names":["useState","ArraysinHooks","myArray","setArrayValues","addItem","id","length","value","Math","floor","random","map","item"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,SAASC,aAAT,GAAyB;AAErB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAA4BH,QAAQ,CAAC,EAAD,CAA1C;;AAGA,QAAMI,OAAO,GAAG,MAAM;AAClBD,IAAAA,cAAc,CAAC,CAAC,GAAGD,OAAJ,EAAa;AACxBG,MAAAA,EAAE,EAAEH,OAAO,CAACI,MADY;AAExBC,MAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC;AAFhB,KAAb,CAAD,CAAd;AAKH,GAND;;AAQA,SACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFJ,EAII;AAAQ,IAAA,OAAO,EAAEN,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,OAAO,CAACS,GAAR,CAAYC,IAAI,IAAI;AACjB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACP,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAoBO,IAAI,CAACL,KAAzB;AACH,GAFA,CADL,CADJ,CALJ,CADJ;AAgBH;;AAED,eAAeN,aAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction ArraysinHooks() {\r\n\r\n    const [myArray, setArrayValues] = useState([])\r\n\r\n\r\n    const addItem = () => {\r\n        setArrayValues([...myArray, {\r\n            id: myArray.length,\r\n            value: Math.floor(Math.random() * 10) + 1\r\n        }\r\n        ])\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <hr />\r\n            <div>Hooks demo using array</div>\r\n\r\n            <button onClick={addItem}> Submit </button>\r\n            <div>\r\n                <ul>\r\n                    {myArray.map(item => {\r\n                        <li key={item.id}> {item.value}</li>\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ArraysinHooks;"]},"metadata":{},"sourceType":"module"}