{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"D:\\\\RandDChamber\\\\LogwardPlugin\\\\ProjectManagement\\\\PMA\\\\containers\\\\arraysinhooks.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from \"react\";\n\nfunction ArraysinHooks() {\n  var _this = this;\n\n  var _useState = useState({\n    x: \"\"\n  }),\n      inputVal = _useState[0],\n      setInputVal = _useState[1];\n\n  var _useState2 = useState([]),\n      myArray = _useState2[0],\n      setArrayValues = _useState2[1];\n\n  var addItem = function addItem() {\n    setArrayValues([].concat(_toConsumableArray(myArray), [{\n      id: myArray.length,\n      value: Math.floor(Math.random() * 10) + 1\n    }]));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"Hooks demo using array\"), __jsx(\"input\", {\n    type: \"text\",\n    value: inputVal.x,\n    onChange: function onChange(e) {\n      return setInputVal(_objectSpread({}, inputVal, {\n        x: e.target.value\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    onClick: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \" Submit \"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \" The items in the array are \", myArray), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, myArray.map(function (item) {\n    __jsx(\"li\", {\n      key: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }, \" \", item.value);\n  }))));\n}\n\nexport default ArraysinHooks;","map":{"version":3,"sources":["D:/RandDChamber/LogwardPlugin/ProjectManagement/PMA/containers/arraysinhooks.js"],"names":["useState","ArraysinHooks","x","inputVal","setInputVal","myArray","setArrayValues","addItem","id","length","value","Math","floor","random","e","target","map","item"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AAAA,kBAEWD,QAAQ,CAAC;AAAEE,IAAAA,CAAC,EAAE;AAAL,GAAD,CAFnB;AAAA,MAEdC,QAFc;AAAA,MAEJC,WAFI;;AAAA,mBAGaJ,QAAQ,CAAC,EAAD,CAHrB;AAAA,MAGdK,OAHc;AAAA,MAGLC,cAHK;;AAMrB,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClBD,IAAAA,cAAc,8BAAKD,OAAL,IAAc;AACxBG,MAAAA,EAAE,EAAEH,OAAO,CAACI,MADY;AAExBC,MAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC;AAFhB,KAAd,GAAd;AAKH,GAND;;AAQA,SACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFJ,EAGI;AAAO,IAAA,IAAI,EAAC,MAAZ;AACI,IAAA,KAAK,EAAEV,QAAQ,CAACD,CADpB;AAEI,IAAA,QAAQ,EAAE,kBAAAY,CAAC;AAAA,aAAIV,WAAW,mBAAMD,QAAN;AAAgBD,QAAAA,CAAC,EAAEY,CAAC,CAACC,MAAF,CAASL;AAA5B,SAAf;AAAA,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAOI;AAAQ,IAAA,OAAO,EAAEH,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAkCF,OAAlC,CARJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,OAAO,CAACW,GAAR,CAAY,UAAAC,IAAI,EAAI;AACjB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACT,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAoBS,IAAI,CAACP,KAAzB;AACH,GAFA,CADL,CADJ,CATJ,CADJ;AAoBH;;AAED,eAAeT,aAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction ArraysinHooks() {\r\n\r\n    const [inputVal, setInputVal] = useState({ x: \"\" })\r\n    const [myArray, setArrayValues] = useState([])\r\n\r\n\r\n    const addItem = () => {\r\n        setArrayValues([...myArray, {\r\n            id: myArray.length,\r\n            value: Math.floor(Math.random() * 10) + 1\r\n        }\r\n        ])\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <hr />\r\n            <div>Hooks demo using array</div>\r\n            <input type=\"text\"\r\n                value={inputVal.x}\r\n                onChange={e => setInputVal({ ...inputVal, x: e.target.value })}\r\n            />\r\n            <button onClick={addItem}> Submit </button>\r\n            <div> The items in the array are {myArray}</div>\r\n            <div>\r\n                <ul>\r\n                    {myArray.map(item => {\r\n                        <li key={item.id}> {item.value}</li>\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ArraysinHooks;"]},"metadata":{},"sourceType":"module"}