{"ast":null,"code":"var _jsxFileName = \"D:\\\\RandDChamber\\\\LogwardAssignment\\\\ProjectManagement\\\\PMA\\\\containers\\\\parentReleaseList.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Table, Input, InputNumber, Popconfirm, Form } from 'antd';\nconst originData = [];\n\nfor (let i = 0; i < 100; i++) {\n  originData.push({\n    key: i.toString(),\n    name: `Edrward ${i}`,\n    age: 32,\n    address: `London Park no. ${i}`\n  });\n}\n\nconst EditableCell = (_ref) => {\n  let {\n    editing,\n    dataIndex,\n    title,\n    inputType,\n    record,\n    index,\n    children\n  } = _ref,\n      restProps = _objectWithoutProperties(_ref, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n  const inputNode = inputType === 'number' ? __jsx(InputNumber, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 48\n    }\n  }) : __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 66\n    }\n  });\n  return __jsx(\"td\", _extends({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), editing ? __jsx(Form.Item, {\n    name: dataIndex,\n    style: {\n      margin: 0\n    },\n    rules: [{\n      required: true,\n      message: `Please Input ${title}!`\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, inputNode) : children);\n};\n\nconst EditableTable = () => {\n  const [form] = Form.useForm();\n  const {\n    0: data,\n    1: setData\n  } = useState(originData);\n  const {\n    0: editingKey,\n    1: setEditingKey\n  } = useState('');\n\n  const isEditing = record => record.key === editingKey;\n\n  const edit = record => {\n    form.setFieldsValue(_objectSpread({}, record));\n    alert(record.key);\n    setEditingKey(record.key);\n  };\n\n  const cancel = () => {\n    setEditingKey('');\n  };\n\n  const save = async key => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...data];\n      const index = newData.findIndex(item => key === item.key);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, _objectSpread({}, item, {}, row));\n        setData(newData);\n        setEditingKey('');\n      } else {\n        newData.push(row);\n        setData(newData);\n        setEditingKey('');\n      }\n    } catch (errInfo) {\n      console.log('Validate Failed:', errInfo);\n    }\n  };\n\n  const columns = [{\n    title: 'name',\n    dataIndex: 'name',\n    width: '25%',\n    editable: true\n  }, {\n    title: 'age',\n    dataIndex: 'age',\n    width: '15%'\n  }, {\n    title: 'address',\n    dataIndex: 'address',\n    width: '40%',\n    editable: true\n  }, {\n    title: 'operation',\n    dataIndex: 'operation',\n    render: (_, record) => {\n      const editable = isEditing(record);\n      return editable ? __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      }, __jsx(\"a\", {\n        href: \"javascript:;\",\n        onClick: () => save(record.key),\n        style: {\n          marginRight: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }\n      }, \"Save\"), __jsx(Popconfirm, {\n        title: \"Sure to cancel?\",\n        onConfirm: cancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }\n      }, \"Cancel\"))) : __jsx(\"a\", {\n        disabled: editingKey !== '',\n        onClick: () => edit(record),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }\n      }, \"Edit\");\n    }\n  }];\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return _objectSpread({}, col, {\n      onCell: record => ({\n        record,\n        inputType: col.dataIndex === 'age' ? 'number' : 'text',\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record)\n      })\n    });\n  });\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    form: form,\n    component: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, __jsx(Table, {\n    components: {\n      body: {\n        cell: EditableCell\n      }\n    },\n    bordered: true,\n    dataSource: data,\n    columns: mergedColumns,\n    rowClassName: \"editable-row\",\n    pagination: {\n      onChange: cancel\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  })), __jsx(AddParentRelease, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }));\n};\n\nReactDOM.render(__jsx(EditableTable, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 17\n  }\n}), document.getElementById('container'));","map":{"version":3,"sources":["D:/RandDChamber/LogwardAssignment/ProjectManagement/PMA/containers/parentReleaseList.js"],"names":["React","useState","ReactDOM","Table","Input","InputNumber","Popconfirm","Form","originData","i","push","key","toString","name","age","address","EditableCell","editing","dataIndex","title","inputType","record","index","children","restProps","inputNode","margin","required","message","EditableTable","form","useForm","data","setData","editingKey","setEditingKey","isEditing","edit","setFieldsValue","alert","cancel","save","row","validateFields","newData","findIndex","item","splice","errInfo","console","log","columns","width","editable","render","_","marginRight","mergedColumns","map","col","onCell","body","cell","onChange","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\nimport { Table, Input, InputNumber, Popconfirm, Form } from 'antd';\r\n\r\nconst originData = [];\r\n\r\nfor (let i = 0; i < 100; i++) {\r\n    originData.push({\r\n        key: i.toString(),\r\n        name: `Edrward ${i}`,\r\n        age: 32,\r\n        address: `London Park no. ${i}`,\r\n    });\r\n}\r\n\r\nconst EditableCell = ({\r\n    editing,\r\n    dataIndex,\r\n    title,\r\n    inputType,\r\n    record,\r\n    index,\r\n    children,\r\n    ...restProps\r\n}) => {\r\n    const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\r\n    return (\r\n        <td {...restProps}>\r\n            {editing ? (\r\n                <Form.Item\r\n                    name={dataIndex}\r\n                    style={{\r\n                        margin: 0,\r\n                    }}\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: `Please Input ${title}!`,\r\n                        },\r\n                    ]}\r\n                >\r\n                    {inputNode}\r\n                </Form.Item>\r\n            ) : (\r\n                    children\r\n                )}\r\n        </td>\r\n    );\r\n};\r\n\r\nconst EditableTable = () => {\r\n    const [form] = Form.useForm();\r\n    const [data, setData] = useState(originData);\r\n    const [editingKey, setEditingKey] = useState('');\r\n\r\n\r\n    const isEditing = record => record.key === editingKey;\r\n\r\n    const edit = record => {\r\n        form.setFieldsValue({ ...record });\r\n        alert(record.key);\r\n        setEditingKey(record.key);\r\n    };\r\n\r\n    const cancel = () => {\r\n        setEditingKey('');\r\n    };\r\n\r\n    const save = async key => {\r\n        try {\r\n            const row = await form.validateFields();\r\n            const newData = [...data];\r\n            const index = newData.findIndex(item => key === item.key);\r\n\r\n            if (index > -1) {\r\n                const item = newData[index];\r\n                newData.splice(index, 1, { ...item, ...row });\r\n                setData(newData);\r\n                setEditingKey('');\r\n            } else {\r\n                newData.push(row);\r\n                setData(newData);\r\n                setEditingKey('');\r\n            }\r\n        } catch (errInfo) {\r\n            console.log('Validate Failed:', errInfo);\r\n        }\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'name',\r\n            dataIndex: 'name',\r\n            width: '25%',\r\n            editable: true,\r\n        },\r\n        {\r\n            title: 'age',\r\n            dataIndex: 'age',\r\n            width: '15%',\r\n        },\r\n        {\r\n            title: 'address',\r\n            dataIndex: 'address',\r\n            width: '40%',\r\n            editable: true,\r\n        },\r\n        {\r\n            title: 'operation',\r\n            dataIndex: 'operation',\r\n            render: (_, record) => {\r\n                const editable = isEditing(record);\r\n                return editable ? (\r\n                    <span>\r\n                        <a\r\n                            href=\"javascript:;\"\r\n                            onClick={() => save(record.key)}\r\n                            style={{\r\n                                marginRight: 8,\r\n                            }}\r\n                        >\r\n                            Save\r\n            </a>\r\n                        <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n                            <a>Cancel</a>\r\n                        </Popconfirm>\r\n                    </span>\r\n                ) : (\r\n                        <a disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n                            Edit\r\n                        </a>\r\n                    );\r\n            },\r\n        },\r\n    ];\r\n    const mergedColumns = columns.map(col => {\r\n        if (!col.editable) {\r\n            return col;\r\n        }\r\n\r\n        return {\r\n            ...col,\r\n            onCell: record => ({\r\n                record,\r\n                inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                editing: isEditing(record),\r\n            }),\r\n        };\r\n    });\r\n    return (\r\n        <>\r\n            <Form form={form} component={false}>\r\n                <Table\r\n                    components={{\r\n                        body: {\r\n                            cell: EditableCell,\r\n                        },\r\n                    }}\r\n                    bordered\r\n                    dataSource={data}\r\n                    columns={mergedColumns}\r\n                    rowClassName=\"editable-row\"\r\n                    pagination={{\r\n                        onChange: cancel,\r\n                    }}\r\n                />\r\n            </Form>\r\n            <AddParentRelease />\r\n        </>\r\n    );\r\n};\r\n\r\nReactDOM.render(<EditableTable />, document.getElementById('container'));"]},"metadata":{},"sourceType":"module"}