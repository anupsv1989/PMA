{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\RandDChamber\\\\LogwardPlugin\\\\ProjectManagement\\\\PMA\\\\containers\\\\arraysinhooks.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from \"react\";\n\nfunction ArraysinHooks() {\n  var _useState = useState({\n    x: \"\"\n  }),\n      inputVal = _useState[0],\n      setInputVal = _useState[1];\n\n  var _useState2 = useState([\"a\", \"b\", \"c\", \"d\"]),\n      myArray = _useState2[0],\n      setArrayValues = _useState2[1];\n\n  var consoleVal = function consoleVal() {\n    console.log(\"The value in the arrya\", inputVal);\n    console.log(\"The value in the arrya () \", setInputVal);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"input\", {\n    type: \"text\",\n    value: inputVal.x,\n    onChange: function onChange(e) {\n      return setInputVal(_objectSpread({}, inputVal, {\n        x: e.target.value\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    onClick: consoleVal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \" Submit \"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \" The items in the array are \"));\n}\n\nexport default ArraysinHooks;","map":{"version":3,"sources":["D:/RandDChamber/LogwardPlugin/ProjectManagement/PMA/containers/arraysinhooks.js"],"names":["useState","ArraysinHooks","x","inputVal","setInputVal","myArray","setArrayValues","consoleVal","console","log","e","target","value"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,SAASC,aAAT,GAAyB;AAAA,kBAEWD,QAAQ,CAAC;AAAEE,IAAAA,CAAC,EAAE;AAAL,GAAD,CAFnB;AAAA,MAEdC,QAFc;AAAA,MAEJC,WAFI;;AAAA,mBAGaJ,QAAQ,CAAC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAD,CAHrB;AAAA,MAGdK,OAHc;AAAA,MAGLC,cAHK;;AAMrB,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCN,QAAtC;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CL,WAA1C;AACH,GAHD;;AAKA,SACI,4BACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AACI,IAAA,KAAK,EAAED,QAAQ,CAACD,CADpB;AAEI,IAAA,QAAQ,EAAE,kBAAAQ,CAAC;AAAA,aAAIN,WAAW,mBAAMD,QAAN;AAAgBD,QAAAA,CAAC,EAAEQ,CAAC,CAACC,MAAF,CAASC;AAA5B,SAAf;AAAA,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI;AAAQ,IAAA,OAAO,EAAEL,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAPJ,CADJ;AAYH;;AAED,eAAeN,aAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction ArraysinHooks() {\r\n\r\n    const [inputVal, setInputVal] = useState({ x: \"\" })\r\n    const [myArray, setArrayValues] = useState([\"a\", \"b\", \"c\", \"d\"])\r\n\r\n\r\n    const consoleVal = () => {\r\n        console.log(\"The value in the arrya\", inputVal)\r\n        console.log(\"The value in the arrya () \", setInputVal)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <input type=\"text\"\r\n                value={inputVal.x}\r\n                onChange={e => setInputVal({ ...inputVal, x: e.target.value })}\r\n\r\n            />\r\n            <button onClick={consoleVal}> Submit </button>\r\n            <div> The items in the array are </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ArraysinHooks;"]},"metadata":{},"sourceType":"module"}