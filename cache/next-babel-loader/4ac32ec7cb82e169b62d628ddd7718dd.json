{"ast":null,"code":"var _jsxFileName = \"D:\\\\RandDChamber\\\\LogwardPlugin\\\\ProjectManagement\\\\PMA\\\\pages\\\\hooksAsFunction.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { render } from \"react-dom\";\nimport ObjectsinHooks from \"../containers/objectsinHooks\";\n\nfunction hooksAsFunction() {\n  var initialVal = 0;\n\n  var _useState = useState(initialVal),\n      counterValue = _useState[0],\n      incrementCounter = _useState[1];\n\n  var incrementBy5 = function incrementBy5() {\n    for (var i = 0; i < 5; i++) {\n      incrementCounter(function (prevVal) {\n        return prevVal + 1;\n      });\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \" Only here since this is a functional component - we can use hooks \"), \">\", __jsx(\"button\", {\n    onClick: function onClick() {\n      return incrementCounter(function (prevVal) {\n        return prevVal + 1;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"Counter +\"), __jsx(\"button\", {\n    onClick: function onClick() {\n      return incrementCounter(function (prevVal) {\n        return prevVal - 1;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"Counter -\"), __jsx(\"button\", {\n    onClick: function onClick() {\n      return incrementCounter(initialVal);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"Counter 0\"), __jsx(\"button\", {\n    onClick: incrementBy5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"Counter +5\"), __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \" \", counterValue, \" \"), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), __jsx(ObjectsinHooks, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default hooksAsFunction;","map":{"version":3,"sources":["D:/RandDChamber/LogwardPlugin/ProjectManagement/PMA/pages/hooksAsFunction.js"],"names":["useState","render","ObjectsinHooks","hooksAsFunction","initialVal","counterValue","incrementCounter","incrementBy5","i","prevVal"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;AAGA,SAASC,eAAT,GAA2B;AAEvB,MAAMC,UAAU,GAAG,CAAnB;;AAFuB,kBAGkBJ,QAAQ,CAACI,UAAD,CAH1B;AAAA,MAGhBC,YAHgB;AAAA,MAGFC,gBAHE;;AAKvB,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAEvB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBF,MAAAA,gBAAgB,CAAC,UAAAG,OAAO;AAAA,eAAIA,OAAO,GAAG,CAAd;AAAA,OAAR,CAAhB;AACH;AAEJ,GAND;;AASA,SACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EADJ,OAGI;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMH,gBAAgB,CAAC,UAAAG,OAAO;AAAA,eAAIA,OAAO,GAAG,CAAd;AAAA,OAAR,CAAtB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,EAII;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMH,gBAAgB,CAAC,UAAAG,OAAO;AAAA,eAAIA,OAAO,GAAG,CAAd;AAAA,OAAR,CAAtB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,EAKI;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMH,gBAAgB,CAACF,UAAD,CAAtB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALJ,EAOI;AAAQ,IAAA,OAAO,EAAEG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMF,YAAN,MATJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAYI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADJ;AAkBH;;AAED,eAAeF,eAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport ObjectsinHooks from \"../containers/objectsinHooks\"\r\n\r\n\r\nfunction hooksAsFunction() {\r\n\r\n    const initialVal = 0;\r\n    const [counterValue, incrementCounter] = useState(initialVal)\r\n\r\n    const incrementBy5 = () => {\r\n\r\n        for (var i = 0; i < 5; i++) {\r\n            incrementCounter(prevVal => prevVal + 1)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div> Only here since this is a functional component - we can use hooks </div>>\r\n\r\n            <button onClick={() => incrementCounter(prevVal => prevVal + 1)}>Counter +</button>\r\n            <button onClick={() => incrementCounter(prevVal => prevVal - 1)}>Counter -</button>\r\n            <button onClick={() => incrementCounter(initialVal)}>Counter 0</button>\r\n\r\n            <button onClick={incrementBy5}>Counter +5</button>\r\n\r\n            <h4> {counterValue} </h4>\r\n\r\n            <hr />\r\n            <ObjectsinHooks />\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default hooksAsFunction;"]},"metadata":{},"sourceType":"module"}