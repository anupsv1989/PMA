{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Input, Button, Row, Col, DatePicker, Select, Slider } from 'antd';\nimport { dateFormat } from \"../commons/helpers\";\nimport moment from 'moment';\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\nexport default class AddChildRelease extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onFinish\", values => {\n      console.log(\"this props >>>>>>>>>>>>>>>>.\", this.props);\n      let {\n        thisData,\n        dbData\n      } = this.props;\n      console.log(\"on ifinsh\", values);\n      let defDate = new Date();\n      console.log(\"parent Object after adding defDate\", defDate);\n      console.log(\"parent Object after adding defDate\", defDate);\n      let arr = dbData;\n      arr.map(item => {\n        if (item.key == thisData.key) {\n          let temp = {\n            key: \"cr\" + new Date().getTime(),\n            status: values.status,\n            startDate: values['startDate'] ? values['startDate'].format(dateFormat) : moment(defDate).format(dateFormat),\n            endDate: values['endDate'] ? values['endDate'].format(dateFormat) : moment(defDate).format(dateFormat),\n            description: values.description,\n            progress: values.progress\n          };\n          item.childRelease.push(temp);\n        }\n      });\n      console.log(\"final Array in db\", arr);\n      localStorage.setItem(\"parentReleaseData\", JSON.stringify(arr));\n      this.props.refreshCallBack();\n      this.props.closeModal();\n    });\n\n    this.state = {\n      localPRItems: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"this props >>>>>>>>>>>>>>>>.\", this.props);\n    let chkItem = JSON.parse(localStorage.getItem(\"parentReleaseData\"));\n    let getItems = chkItem == null ? [] : chkItem;\n    this.setState({\n      localPRItems: getItems\n    });\n    console.log(\"DID mount\", getItems);\n    console.log(\"DID mount localPRItems\", this.state.localPRItems);\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(Form, {\n      name: \"basic\",\n      initialValues: {\n        remember: true\n      },\n      onFinish: this.onFinish,\n      onFinishFailed: this.onFinishFailed\n    }, __jsx(Row, null, __jsx(Col, {\n      span: 8,\n      className: \"left-addCol\"\n    }, __jsx(Form.Item, {\n      label: \"Status\",\n      name: \"status\"\n    }, __jsx(Select, {\n      name: \"status\"\n    }, __jsx(Option, {\n      value: \"IN PROGRESS\"\n    }, \"In Progress\"), __jsx(Option, {\n      value: \"UNRELEASED\"\n    }, \"Unreleased\"), __jsx(Option, {\n      value: \"RELEASED\"\n    }, \"Released\")))), __jsx(Col, {\n      span: 6\n    }, __jsx(Form.Item, {\n      label: \"Start Date\",\n      name: \"startDate\"\n    }, __jsx(DatePicker, {\n      defaultValue: moment(new Date(), dateFormat)\n    }))), __jsx(Col, {\n      span: 6,\n      className: \"enddate-align\"\n    }, __jsx(Form.Item, {\n      label: \"End Date\",\n      name: \"endDate\"\n    }, __jsx(DatePicker, {\n      defaultValue: moment(new Date(), dateFormat)\n    })))), __jsx(Row, null, __jsx(Col, {\n      span: 8,\n      className: \"left-addCol\"\n    }, __jsx(Form.Item, {\n      label: \"Progress\",\n      name: \"progress\"\n    }, __jsx(Slider, {\n      defaultValue: 0,\n      tooltipPlacement: \"bottom\",\n      name: \"progress\",\n      onChange: this.handleSlider\n    }))), __jsx(Col, {\n      span: 14\n    }, __jsx(Form.Item, {\n      label: \"Description\",\n      name: \"description\"\n    }, __jsx(Input, null)))), __jsx(Row, null, __jsx(Col, {\n      span: 24,\n      className: \"btn-add-child\"\n    }, __jsx(Form.Item, tailLayout, __jsx(Button, {\n      type: \"primary\",\n      htmlType: \"submit\"\n    }, \"Submit\"))))));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}