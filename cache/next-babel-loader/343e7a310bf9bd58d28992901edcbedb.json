{"ast":null,"code":"var _jsxFileName = \"D:\\\\RandDChamber\\\\LogwardPlugin\\\\ProjectManagement\\\\PMA\\\\containers\\\\objectsinHooks.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from \"react\";\n\nfunction ObjectsinHooks() {\n  const {\n    0: name,\n    1: setName\n  } = useState({\n    firstName: \"\",\n    lastName: \"\"\n  });\n  return __jsx(React.Fragment, null, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, \" Hooks demo using objects \"), __jsx(\"input\", {\n    type: \"text\",\n    value: name.firstName,\n    onChange: e => setName(_objectSpread({}, name, {\n      firstName: e.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    value: name.lastName,\n    onChange: e => setName(_objectSpread({}, name, {\n      lastName: e.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"Firstname : \", name.firstName, \" ---  LastName : \", name.lastName));\n}\n\nexport default ObjectsinHooks;","map":{"version":3,"sources":["D:/RandDChamber/LogwardPlugin/ProjectManagement/PMA/containers/objectsinHooks.js"],"names":["useState","ObjectsinHooks","name","setName","firstName","lastName","e","target","value"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAGA,SAASC,cAAT,GAA0B;AACtB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBH,QAAQ,CAAC;AAAEI,IAAAA,SAAS,EAAE,EAAb;AAAiBC,IAAAA,QAAQ,EAAE;AAA3B,GAAD,CAAhC;AAEA,SACI,4BAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCANJ,EAOI;AAAO,IAAA,IAAI,EAAC,MAAZ;AACI,IAAA,KAAK,EAAEH,IAAI,CAACE,SADhB;AAEI,IAAA,QAAQ,EAAEE,CAAC,IAAIH,OAAO,mBAAMD,IAAN;AAAYE,MAAAA,SAAS,EAAEE,CAAC,CAACC,MAAF,CAASC;AAAhC,OAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAWI;AAAO,IAAA,IAAI,EAAC,MAAZ;AACI,IAAA,KAAK,EAAEN,IAAI,CAACG,QADhB;AAEI,IAAA,QAAQ,EAAEC,CAAC,IAAIH,OAAO,mBAAMD,IAAN;AAAYG,MAAAA,QAAQ,EAAEC,CAAC,CAACC,MAAF,CAASC;AAA/B,OAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACiBN,IAAI,CAACE,SADtB,uBACkDF,IAAI,CAACG,QADvD,CAhBJ,CADJ;AAwBH;;AAED,eAAeJ,cAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\n\r\nfunction ObjectsinHooks() {\r\n    const [name, setName] = useState({ firstName: \"\", lastName: \"\" });\r\n\r\n    return (\r\n        <>\r\n            {/* here we need to use ...name(spread operator) becasue\r\n                wihtout using hooks the state will be preserved and old state obejcts will be retained\r\n                in hooks, in this syntax, we must manually set the state or preserve the old state by using the\r\n                spread operator .....\r\n            */}\r\n            <h4> Hooks demo using objects </h4>\r\n            <input type=\"text\"\r\n                value={name.firstName}\r\n                onChange={e => setName({ ...name, firstName: e.target.value })}\r\n            />\r\n            <input type=\"text\"\r\n                value={name.lastName}\r\n                onChange={e => setName({ ...name, lastName: e.target.value })}\r\n            />\r\n\r\n            <div>\r\n                Firstname : {name.firstName} ---  LastName : {name.lastName}\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ObjectsinHooks;"]},"metadata":{},"sourceType":"module"}