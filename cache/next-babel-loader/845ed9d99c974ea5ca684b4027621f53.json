{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Form, Input, Button, Row, Col, DatePicker, Select, Slider } from 'antd';\nimport { dateFormat } from \"../commons/helpers\";\nimport moment from 'moment';\nvar tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n}; // To add items for child / expandables release listing\n// Expects - props from parent - callback method to call on save\n\nvar AddChildRelease = /*#__PURE__*/function (_Component) {\n  _inherits(AddChildRelease, _Component);\n\n  var _super = _createSuper(AddChildRelease);\n\n  function AddChildRelease(props) {\n    var _this;\n\n    _classCallCheck(this, AddChildRelease);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"onFinish\", function (values) {\n      var _this$props = _this.props,\n          thisData = _this$props.thisData,\n          dbData = _this$props.dbData;\n      var defDate = new Date();\n      var arr = dbData;\n      arr.map(function (item) {\n        if (item.key == thisData.key) {\n          var temp = {\n            key: \"cr\" + new Date().getTime(),\n            status: values.status,\n            startDate: values['startDate'] ? values['startDate'].format(dateFormat) : moment(defDate).format(dateFormat),\n            endDate: values['endDate'] ? values['endDate'].format(dateFormat) : moment(defDate).format(dateFormat),\n            description: values.description,\n            progress: values.progress\n          };\n          item.childRelease.push(temp);\n        }\n      });\n      localStorage.setItem(\"parentReleaseData\", JSON.stringify(arr));\n\n      _this.props.refreshCallBack();\n\n      _this.props.closeModal();\n    });\n\n    _this.state = {\n      localPRItems: []\n    };\n    return _this;\n  }\n\n  _createClass(AddChildRelease, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var chkItem = JSON.parse(localStorage.getItem(\"parentReleaseData\"));\n      var getItems = chkItem == null ? [] : chkItem;\n      this.setState({\n        localPRItems: getItems\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(Form, {\n        name: \"basic\",\n        initialValues: {\n          remember: true\n        },\n        onFinish: this.onFinish,\n        onFinishFailed: this.onFinishFailed\n      }, __jsx(Row, null, __jsx(Col, {\n        span: 8,\n        className: \"left-addCol\"\n      }, __jsx(Form.Item, {\n        label: \"Status\",\n        name: \"status\"\n      }, __jsx(Select, {\n        name: \"status\"\n      }, __jsx(Option, {\n        value: \"IN PROGRESS\"\n      }, \"In Progress\"), __jsx(Option, {\n        value: \"UNRELEASED\"\n      }, \"Unreleased\"), __jsx(Option, {\n        value: \"RELEASED\"\n      }, \"Released\")))), __jsx(Col, {\n        span: 6\n      }, __jsx(Form.Item, {\n        label: \"Start Date\",\n        name: \"startDate\"\n      }, __jsx(DatePicker, {\n        defaultValue: moment(new Date(), dateFormat)\n      }))), __jsx(Col, {\n        span: 6,\n        className: \"enddate-align\"\n      }, __jsx(Form.Item, {\n        label: \"End Date\",\n        name: \"endDate\"\n      }, __jsx(DatePicker, {\n        defaultValue: moment(new Date(), dateFormat)\n      })))), __jsx(Row, null, __jsx(Col, {\n        span: 8,\n        className: \"left-addCol\"\n      }, __jsx(Form.Item, {\n        label: \"Progress\",\n        name: \"progress\"\n      }, __jsx(Slider, {\n        defaultValue: 0,\n        tooltipPlacement: \"bottom\",\n        name: \"progress\",\n        onChange: this.handleSlider\n      }))), __jsx(Col, {\n        span: 14\n      }, __jsx(Form.Item, {\n        label: \"Description\",\n        name: \"description\"\n      }, __jsx(Input, null)))), __jsx(Row, null, __jsx(Col, {\n        span: 24,\n        className: \"btn-add-child\"\n      }, __jsx(Form.Item, tailLayout, __jsx(Button, {\n        type: \"primary\",\n        htmlType: \"submit\"\n      }, \"Submit\"))))));\n    }\n  }]);\n\n  return AddChildRelease;\n}(Component);\n\nexport { AddChildRelease as default };","map":null,"metadata":{},"sourceType":"module"}