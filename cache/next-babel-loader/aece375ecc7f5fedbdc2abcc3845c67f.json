{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"D:\\\\RandDChamber\\\\LogwardPlugin\\\\ProjectManagement\\\\PMA\\\\containers\\\\arraysinhooks.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\n\nfunction ArraysinHooks() {\n  var _this = this;\n\n  var _useState = useState([]),\n      myArray = _useState[0],\n      setArrayValues = _useState[1];\n\n  var addItem = function addItem() {\n    console.log(\"hi\");\n    setArrayValues([].concat(_toConsumableArray(myArray), [{\n      id: myArray.length,\n      value: Math.floor(Math.random() * 10) + 1\n    }]));\n    console.log(\"hi\", myArray);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"Hooks demo using array\"), __jsx(\"button\", {\n    onClick: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \" Submit \"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, myArray.map(function (item) {\n    __jsx(\"li\", {\n      key: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    }, \" \", item.value);\n  }))));\n}\n\nexport default ArraysinHooks;","map":{"version":3,"sources":["D:/RandDChamber/LogwardPlugin/ProjectManagement/PMA/containers/arraysinhooks.js"],"names":["useState","ArraysinHooks","myArray","setArrayValues","addItem","console","log","id","length","value","Math","floor","random","map","item"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AAAA,kBAEaD,QAAQ,CAAC,EAAD,CAFrB;AAAA,MAEdE,OAFc;AAAA,MAELC,cAFK;;AAKrB,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAH,IAAAA,cAAc,8BAAKD,OAAL,IAAc;AACxBK,MAAAA,EAAE,EAAEL,OAAO,CAACM,MADY;AAExBC,MAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC;AAFhB,KAAd,GAAd;AAKAP,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBJ,OAAlB;AACH,GARD;;AAUA,SACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFJ,EAII;AAAQ,IAAA,OAAO,EAAEE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,OAAO,CAACW,GAAR,CAAY,UAAAC,IAAI,EAAI;AACjB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACP,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAoBO,IAAI,CAACL,KAAzB;AACH,GAFA,CADL,CADJ,CALJ,CADJ;AAgBH;;AAED,eAAeR,aAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction ArraysinHooks() {\r\n\r\n    const [myArray, setArrayValues] = useState([])\r\n\r\n\r\n    const addItem = () => {\r\n        console.log(\"hi\")\r\n        setArrayValues([...myArray, {\r\n            id: myArray.length,\r\n            value: Math.floor(Math.random() * 10) + 1\r\n        }\r\n        ])\r\n        console.log(\"hi\", myArray)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <hr />\r\n            <div>Hooks demo using array</div>\r\n\r\n            <button onClick={addItem}> Submit </button>\r\n            <div>\r\n                <ul>\r\n                    {myArray.map(item => {\r\n                        <li key={item.id}> {item.value}</li>\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ArraysinHooks;"]},"metadata":{},"sourceType":"module"}